@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc.Localization
@inject IAuthorizationService AuthorizationService

@inject IViewLocalizer Localizer

@if (User.Identity.IsAuthenticated)
{
    <div class="dropdown nav navbar-nav navbar-right ">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="margin-right: auto;">
            @Localizer["Hello"] @User.Identity.Name!
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            @if (User.IsInRole("Admin") && User.IsInRole("Blocked") == false)
            {
                <a class="nav-link text-dark dropdown-item" asp-action="Index" asp-area="" asp-controller="Admin" title="@Localizer["AdminPanelTitle"]">@Localizer["AdminPanel"]</a>
            }
            @if (User.IsInRole("Blocked") == false)
            {
                <a class="nav-link text-dark dropdown-item" asp-action="Index" asp-controller="Post" asp-route-UserName="@User.Identity.Name" title="@Localizer["PostsTitle"]">@Localizer["Posts"]</a>
            }
            <a class="nav-link text-dark dropdown-item" asp-action="Logout" asp-controller="Account">@Localizer["Logout"]</a>

        </div>
    </div>
}
else
{
<div class="dropdown nav navbar-nav navbar-right ">
    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        @Localizer["LoginDropDown"]
    </button>
    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
        <a class="nav-link text-dark dropdown-item" asp-action="Register" asp-controller="Account">@Localizer["Register"]</a>
        <a class="nav-link text-dark dropdown-item" asp-action="Login" asp-controller="Account">@Localizer["Login"]</a>
    </div>
</div>
}
